{"version":3,"sources":["acnh.jpg","utils/API.js","pages/Discover.js","components/Hero.js","components/Facts.js","pages/About.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","get","Discover","state","villager","image","name","song","randomVillager","random","Math","floor","API","then","res","setState","Object","values","data","image_uri","birthday","species","gender","personality","catchPhrase","catch","err","console","log","this","className","onClick","src","alt","style","borderRadius","Component","Hero","props","Facts","birthdayPerson","celebrateBirthday","map","cur","dateObj","Date","getDate","getMonth","key","id","color","background","padding","About","Navbar","to","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1a94413f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/acnh.c78db54e.jpg\";","import axios from \"axios\";\n\nconst BASEURL = \"https://acnhapi.com/v1a/villagers/\";\n\nexport default {\n  getRandomVillager: function () {\n    return axios.get(BASEURL);\n  },\n};\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport {\n  // FaThumbsUp,\n  // FaThumbsDown,\n  FaArrowAltCircleLeft,\n  FaArrowAltCircleRight,\n} from \"react-icons/fa\";\n\nclass Discover extends Component {\n  state = {\n    villager: \"\",\n    image: \"\",\n    name: \"\",\n    song: \"\",\n  };\n\n  componentDidMount() {\n    this.randomVillager();\n  }\n\n  randomVillager = () => {\n    let random = [Math.floor(Math.random() * 390)];\n    API.getRandomVillager(random)\n      .then((res) =>\n        this.setState({\n          name: Object.values(res.data)[random].name[`name-USen`],\n          image: Object.values(res.data)[random].image_uri,\n          birthday: Object.values(res.data)[random][`birthday-string`],\n          species: Object.values(res.data)[random].species,\n          gender: Object.values(res.data)[random].gender,\n          personality: Object.values(res.data)[random].personality,\n          catchPhrase: Object.values(res.data)[random][`catch-phrase`],\n        })\n      )\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Discover New Friends</h1>\n        <div\n          className=\"arrow\"\n          onClick={() => {\n            this.randomVillager();\n          }}\n        >\n          <FaArrowAltCircleLeft /> <FaArrowAltCircleRight />\n        </div>\n\n        <img\n          src={this.state.image}\n          alt=\"villager\"\n          style={{ borderRadius: \"15px\" }}\n        />\n\n        <h4>Name: {this.state.name}</h4>\n        <h4>Gender: {this.state.gender}</h4>\n        <h4>Species: {this.state.species}</h4>\n        <h4>Birthday: {this.state.birthday}</h4>\n        <h4>Personality: {this.state.personality}</h4>\n        <h4>Catch Phrase: \"{this.state.catchPhrase}\"</h4>\n      </div>\n    );\n  }\n}\n\nexport default Discover;\n","import React from \"react\";\nimport image from \"../acnh.jpg\";\n\nfunction Hero(props) {\n  return <img src={image} alt=\"animal crossing\" />;\n}\n\nexport default Hero;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\n\nclass Facts extends Component {\n  state = {\n    birthdayPerson: [],\n  };\n  componentDidMount() {\n    this.celebrateBirthday();\n  }\n\n  celebrateBirthday = () => {\n    API.getRandomVillager()\n      .then((res) =>\n        this.setState({\n          birthdayPerson: Object.values(res.data).map(function (cur) {\n            let dateObj = new Date();\n            return cur.birthday ===\n              dateObj.getDate() + \"/\" + (dateObj.getMonth() + 1) ? (\n              <div className=\"displayCard\" key={cur.id}>\n                <h4>Today is {cur.name[`name-USen`]}'s Birthday</h4>\n                <img src={cur.image_uri} alt=\"villager\"></img>\n                <h2\n                  style={{\n                    color: \"#f0fff5\",\n                    background: \"#992d23\",\n                    borderRadius: \"7px\",\n                    padding: \"7px\",\n                  }}\n                >\n                  Happy Birthday {cur.name[`name-USen`]}!\n                </h2>\n              </div>\n            ) : (\n              \"\"\n            );\n          }),\n        })\n      )\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.birthdayPerson}</div>\n      </div>\n    );\n  }\n}\n\nexport default Facts;\n","import React from \"react\";\nimport Hero from \"../components/Hero\";\nimport Facts from \"../components/Facts\";\n\nfunction About() {\n  return (\n    <div>\n      <Facts />\n      <Hero />\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../index.css\";\n\nexport default function Navbar(props) {\n  return (\n    <div className=\"nav\">\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Animal Crossing</Link>\n          </li>\n          <li>\n            <Link to=\"/discover\">Discover</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Discover from \"./pages/Discover\";\nimport About from \"./pages/About\";\nimport Navbar from \"./components/Navbar\";\n\nconst App = () => (\n  <Router>\n    <Navbar />\n    <Route path=\"/acnh\" component={About} />\n    <Route exact path=\"/\" component={About} />\n    <Route path=\"/discover\" component={Discover} />\n  </Router>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}